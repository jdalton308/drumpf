
// Variables
//============================

//// COLORS ////
//-------------
$black:		    #000;
$grey:		    #666;
$light-grey:	#aaa;
$lighter-grey:  #ddd;
$off-white: 	#FAFAFA;
$white: 		#FFF;

$mint: 			#58EBB3;
$brown: 		#9E7E33;

$main-bg: 		$mint;
$box-color: 	$brown;
$text-color: 	$white;
$box-shadow: 	 4px 2px 20px -10px $black;
$box-shadow-active: 	 4px 2px 20px -14px $black;


//// FONTS ////
//-------------
$base-font-size: 	20px;
$sansFamily: 		Arial, 'sans-serif';


//// BREAKPOINTS ////
//-------------------
$mobile:    768px;
$tablet:    1024px;
$desktop:   1200px;


//// LAYOUT ////
//-------------------
$container:   800px;
$container-lg:  1000px;


//// OTHER ////
//-------------
$curve1: cubic-bezier(.22,.07,.23,.99);
$curve2: cubic-bezier(.97,.05,.7,.96);
$curve3: cubic-bezier(.21,.05,.07,.99);



//// MIXINS ////
//-------------
@mixin transition($time: 0.5s) {
	-webkit-transition: all $time;
	transition: all $time;
}
@mixin transform($props) {
  -ms-transform: $props;
  -webkit-transform: $props;
  transform: $props;
}
@mixin centerMe() {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform( translate(-50%, -50%) );
}
@mixin centerX() {
  position: absolute;
  right: 50%;
  @include transform( translateX(50%) );
}
@mixin centerY() {
  position: absolute;
  top: 50%;
  @include transform( translateY(-50%) );
}

// Animations
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin animation($name, $duration, $timing: $curve1, $delay: 0s, $iterations: 1, $direction: normal,  $fill-mode: forwards) {

  -webkit-animation: $name $duration $timing $delay $iterations $direction $fill-mode;
  animation: $name $duration $timing $delay $iterations $direction $fill-mode;

}

@include keyframes(trip) {
	0% {
		@include transform( translateX(50%) );
	}
	40% {
		@include transform( translateX(47vh) translateY(-4vw) rotate(10deg) );
	}
	55% {
		@include transform( translateX(49vh) translateY(-6vw) rotate(-2deg) );
	}
	70% {
		@include transform( translateX(49vh) translateY(-8vw) rotate(2deg) );
	}
	80% {
		@include transform( translateX(49vh) translateY(-9vw) rotate(-1deg) );
	}
	86% {
		@include transform( translateX(50vh) translateY(-10vw) rotate(0deg) );
	}
	100% {
		@include transform( translateX(50vh) translateY(-12vw) rotate(0deg) );
	}
};

@include keyframes(tripDesktop) {
	0% {
		@include transform( translateX(50%) );
	}
	40% {
		@include transform( translateX(48%) rotate(95deg) translateY(-7vw) )
	}
	60% {
		@include transform( translateX(49%) rotate(87deg) translateY(-10vw) )
	}
	80% {
		@include transform( translateX(50%) rotate(91deg) translateY(-12vw) )
	}
	100% {
		@include transform( translateX(50%) rotate(90deg) translateY(-13vw) )
	}

};

@include keyframes(delayShow) {
	0% {
		opacity: 0;
	}
	99% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
};

@include keyframes(delayHide) {
	0% {
		opacity: 1;
	}
	99% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
};